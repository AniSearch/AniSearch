module.exports.cleanHTML = (text) => {
	return text.replace(/<b>/g, '').replace(/<\/b>/g, '').replace(/<br>/g, '').replace(/<i>/g, '').replace(/<\/i>/g, '');
};

module.exports.handleSpoilers = (text) => {
	function isMultiple(x, y) { return Math.round(x / y) / (1 / y) === x };
	const final = `${text.replace(/~!/g, '||').replace(/!~/g, '||')}`;
	const amount = final.split('||').length - 1;
	if (!isMultiple(amount, 2)) return `${final}||`;
	return final;
};

module.exports.characterName = (character) => {
	return `${character.name.first}${character.name.last ? ` ${character.name.last}` : ''}`;
};

module.exports.title = (title) => {
	return title.english || title.romaji;
};

module.exports.reactionDelete = async (botMessage, playerMessage) => {
	const filter = (reaction, user) => { return (['üóëÔ∏è'].includes(reaction.emoji.name) && user.id === playerMessage.author.id )};
	
	if (botMessage.deletable) await botMessage.react('üóëÔ∏è').catch(() => {});
	setTimeout( () => { botMessage.reactions.cache.get('üóëÔ∏è').remove().catch(() => {}) }, 50000);

	const reactions = await botMessage.awaitReactions(filter, { max: 1, time: 50000 });
	if ((reactions.get('üóëÔ∏è')) && botMessage.deletable) botMessage.delete().catch(() => {});
};

module.exports.getCount = (client, type) => {
	if (type === 'users') {
		let users = 0;
		client.guilds.cache.map(g => g.memberCount).forEach(count => users = users + count);
		return users;
	} else if (type === 'guilds') return client.guilds.cache.size;
};

module.exports.emoji = {  
	0: '0Ô∏è‚É£', 1: '1Ô∏è‚É£', 2: '2Ô∏è‚É£', 3: '3Ô∏è‚É£', 4: '4Ô∏è‚É£', 5: '5Ô∏è‚É£', 6: '6Ô∏è‚É£', 7: '7Ô∏è‚É£', 8: '8Ô∏è‚É£', 9: '9Ô∏è‚É£', 10: 'üîü' ,
	'0Ô∏è‚É£': 0, '1Ô∏è‚É£': 1, '2Ô∏è‚É£': 2, '3Ô∏è‚É£': 3, '4Ô∏è‚É£': 4, '5Ô∏è‚É£': 5, '6Ô∏è‚É£': 6, '7Ô∏è‚É£': 7, '8Ô∏è‚É£': 8, '9Ô∏è‚É£': 9, 'üîü': 10
};